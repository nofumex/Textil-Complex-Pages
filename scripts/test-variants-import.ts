import { WPVariantsImporter } from '../src/lib/wp-variants-import';
import fs from 'fs';
import path from 'path';

async function testImport() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å –≤–∞—Ä–∏–∞—Ü–∏—è–º–∏...');
  
  try {
    // –ß–∏—Ç–∞–µ–º XML —Ñ–∞–π–ª
    const xmlPath = path.join(process.cwd(), 'WordPress.2025-10-07.xml');
    
    if (!fs.existsSync(xmlPath)) {
      console.error('‚ùå XML —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:', xmlPath);
      return;
    }

    const xmlContent = fs.readFileSync(xmlPath, 'utf-8');
    
    const importer = new WPVariantsImporter();
    
    const options = {
      defaultCurrency: 'RUB',
      updateExisting: false,
      skipInvalid: true,
      autoCreateCategories: true,
      createAllVariants: true,
    };

    console.log('üì• –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç...');
    const result = await importer.importFromXML(xmlContent, options);
    
    console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–º–ø–æ—Ä—Ç–∞:');
    console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${result.processed}`);
    console.log(`   –°–æ–∑–¥–∞–Ω–æ: ${result.created}`);
    console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${result.updated}`);
    console.log(`   –í–∞—Ä–∏–∞—Ü–∏–π —Å–æ–∑–¥–∞–Ω–æ: ${result.variantsCreated}`);
    
    if (result.errors.length > 0) {
      console.log('‚ùå –û—à–∏–±–∫–∏:');
      result.errors.forEach(error => console.log(`   - ${error}`));
    }
    
    if (result.warnings.length > 0) {
      console.log('‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:');
      result.warnings.forEach(warning => console.log(`   - ${warning}`));
    }
    
    console.log('üéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ:', error);
  }
}

testImport();
